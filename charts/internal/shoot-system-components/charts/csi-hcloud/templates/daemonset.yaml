kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: hcloud-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hcloud-csi-node
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: hcloud-csi-node
        role: hcloud-csi
    spec:
      automountServiceAccountToken: false
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccount: csi-driver-node
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      containers:
      - name: node-driver-registrar
        image: {{ index .Values.images "csi-node-driver-registrar" }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -rf /registration/csi.hetzner.cloud-reg.sock /csi/csi.sock /var/lib/kubelet/plugins_registry/csi.hetzner.cloud-reg.sock"]
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins_registry/csi.hetzner.cloud/csi.sock
        securityContext:
          privileged: true
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      - name: hcloud-csi-node
        image: {{ index .Values.images "hcloud-csi-driver-node" }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: X_CSI_MODE
          value: "node"
        - name: X_CSI_SPEC_REQ_VALIDATION
          value: "false"
        - name: HCLOUD_TOKEN
          valueFrom:
            secretKeyRef:
              name: hcloud-csi
              key: token
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
          - name: plugin-dir
            mountPath: /csi
          - name: pods-mount-dir
            mountPath: /var/lib/kubelet
            # needed so that any mounts setup inside this container are
            # propagated back to the host machine.
            mountPropagation: "Bidirectional"
          - name: device-dir
            mountPath: /dev
        ports:
          - name: healthz
            containerPort: 9808
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
          failureThreshold: 3
      - name: liveness-probe
        image: {{ index .Values.images "liveness-probe" }}
        args:
          - "--csi-address=$(ADDRESS)"
        env:
          - name: ADDRESS
            value: /csi/csi.sock
        volumeMounts:
          - name: plugin-dir
            mountPath: /csi
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/csi.hetzner.cloud
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
