apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: cloud-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    gardener.cloud/role: controlplane
    app: kubernetes
    role: cloud-controller-manager
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: cloud-controller-manager
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        gardener.cloud/role: controlplane
        app: kubernetes
        role: cloud-controller-manager
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
        networking.gardener.cloud/from-prometheus: allowed
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
      containers:
      - image: {{ index .Values.images "hcloud-cloud-controller-manager" }}
        name: hcloud-cloud-controller-manager
        command: [ "/bin/hcloud-cloud-controller-manager" ]
        args:
          - --cloud-provider=hcloud
          - --allow-untagged-cloud
          - --kubeconfig=/var/lib/cloud-controller-manager/kubeconfig
          - --leader-elect=true
          {{- if semverCompare ">= 1.13" .Values.kubernetesVersion }}
          - --secure-port={{ include "cloud-controller-manager.port" . }}
          - --port=0
          {{- end }}
          {{- if semverCompare ">= 1.12" .Values.kubernetesVersion }}
          - --authentication-kubeconfig=/var/lib/cloud-controller-manager/kubeconfig
          - --authorization-kubeconfig=/var/lib/cloud-controller-manager/kubeconfig
          - --tls-cert-file=/var/lib/cloud-controller-manager-server/cloud-controller-manager-server.crt
          - --tls-private-key-file=/var/lib/cloud-controller-manager-server/cloud-controller-manager-server.key
          {{- end }}
          - --use-service-account-credentials
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: HCLOUD_TOKEN
            valueFrom:
              secretKeyRef:
                name: cloudprovider
                key: hcloudToken
          - name: HCLOUD_LOAD_BALANCERS_LOCATION
            value: {{ .Values.podRegion }}
          {{- if .Values.podNetworkIDs.workers }}
          - name: HCLOUD_NETWORK
            value: {{ .Values.podNetworkIDs.workers | quote }}
          {{- end }}
          {{- if .Values.disableIPv6 }}
          - name: HCLOUD_LOAD_BALANCERS_DISABLE_IPV6
            value: "true"
          {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            {{- if semverCompare ">= 1.13" .Values.kubernetesVersion }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
            port: {{ include "cloud-controller-manager.port" . }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        ports:
        - containerPort: {{ include "cloud-controller-manager.port" . }}
          name: metrics
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: cloud-controller-manager
          mountPath: /var/lib/cloud-controller-manager
        - name: cloud-controller-manager-server
          mountPath: /var/lib/cloud-controller-manager-server
        - name: cloud-provider-config
          mountPath: /etc/kubernetes/cloudprovider
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cloud-controller-manager
        secret:
          secretName: cloud-controller-manager
      - name: cloud-controller-manager-server
        secret:
          secretName: cloud-controller-manager-server
      - name: cloud-provider-config
        configMap:
          name: cloud-provider-config
