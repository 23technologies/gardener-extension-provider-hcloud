---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.hetzner.cloud
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hcloud-csi-controller
  namespace: {{ .Release.Namespace }}
labels:
  gardener.cloud/role: controlplane
  app: kubernetes
  role: csi-plugin-controller
spec:
  serviceName: hcloud-csi-controller
  replicas: {{ .Values.replicas }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: hcloud-csi-controller
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        gardener.cloud/role: controlplane
        app: hcloud-csi-controller
        role: hcloud-csi
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
    spec:
      automountServiceAccountToken: false
      containers:
        - name: csi-attacher
          image: {{ index .Values.images "csi-attacher" }}
          args:
          - --timeout=300s
          - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
          - --leader-election
          - --leader-election-namespace=$(CSI_NAMESPACE)
          env:
          - name: CSI_NAMESPACE
            value: kube-system
{{- if .Values.resources.attacher }}
          resources:
{{ toYaml .Values.resources.attacher | indent 12 }}
{{- end }}
          volumeMounts:
          - name: socket-dir
            mountPath: /run/csi
          - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
            name: kubeconfig-csi-attacher
            readOnly: true
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
{{- if .Values.resizerEnabled }}
        - name: csi-resizer
          image: {{ index .Values.images "csi-resizer" }}
          args:
          - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
          - --leader-election
          - --leader-election-namespace=$(CSI_NAMESPACE)
          env:
          - name: CSI_NAMESPACE
            value: kube-system
{{- if .Values.resources.resizer }}
          resources:
{{ toYaml .Values.resources.resizer | indent 12 }}
{{- end }}
          volumeMounts:
          - name: socket-dir
            mountPath: /run/csi
          - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
            name: kubeconfig-csi-resizer
            readOnly: true
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
{{- end }}
        - name: csi-provisioner
          image: {{ index .Values.images "csi-provisioner" }}
          args:
          - --timeout=300s
          - --feature-gates=Topology=true
          - --strict-topology
          - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
          - --leader-election
          - --leader-election-namespace=$(CSI_NAMESPACE)
          env:
          - name: CSI_NAMESPACE
            value: kube-system
{{- if .Values.resources.provisioner }}
          resources:
{{ toYaml .Values.resources.provisioner | indent 12 }}
{{- end }}
          volumeMounts:
          - name: socket-dir
            mountPath: /run/csi
          - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
            name: kubeconfig-csi-provisioner
            readOnly: true
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
        - name: hcloud-csi-driver
          image: {{ index .Values.images "csi-driver-controller" }}
          env:
          - name: CSI_ENDPOINT
            value: unix:///run/csi/socket
          - name: KUBECONFIG
            value: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
          - name: METRICS_ENDPOINT
            value: 0.0.0.0:9189
          - name: ENABLE_METRICS
            value: "true"
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: HCLOUD_TOKEN
            valueFrom:
              secretKeyRef:
                name: hcloud-csi
                key: token
          - name: HCLOUD_SERVER_ID
            value: "-1"
          - name: HCLOUD_LOCATION_NAME
            value: {{ .Values.csiRegion }}
          - name: LOGGER_LEVEL
            value: "{{ .Values.loggerLevel }}" # Options: DEVELOPMENT, PRODUCTION
{{- if .Values.resources.controller }}
          resources:
{{ toYaml .Values.resources.controller | indent 12 }}
{{- end }}
          volumeMounts:
          - name: socket-dir
            mountPath: /run/csi
          - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
            name: kubeconfig-csi-driver
            readOnly: true
          ports:
            - containerPort: 9189
              name: metrics
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
        - name: liveness-probe
          image: {{ index .Values.images "liveness-probe" }}
          args:
            - --csi-address=/run/csi/socket
{{- if .Values.resources.liveness }}
          resources:
{{ toYaml .Values.resources.liveness | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: /run/csi
              name: socket-dir
      volumes:
      - name: kubeconfig-csi-attacher
        projected:
          defaultMode: 420
          sources:
            - secret:
                items:
                  - key: kubeconfig
                    path: kubeconfig
                name: {{ .Values.global.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                  - key: token
                    path: token
                name: shoot-access-csi-attacher
                optional: false
      - name: kubeconfig-csi-resizer
        projected:
          defaultMode: 420
          sources:
            - secret:
                items:
                  - key: kubeconfig
                    path: kubeconfig
                name: {{ .Values.global.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                  - key: token
                    path: token
                name: shoot-access-csi-resizer
                optional: false
      - name: kubeconfig-csi-provisioner
        projected:
          defaultMode: 420
          sources:
            - secret:
                items:
                  - key: kubeconfig
                    path: kubeconfig
                name: {{ .Values.global.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                  - key: token
                    path: token
                name: shoot-access-csi-provisioner
                optional: false
      - name: kubeconfig-csi-driver
        projected:
          defaultMode: 420
          sources:
            - secret:
                items:
                  - key: kubeconfig
                    path: kubeconfig
                name: {{ .Values.global.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                  - key: token
                    path: token
                name: shoot-access-hcloud-csi-controller
                optional: false
      - name: socket-dir
        emptyDir: {}
